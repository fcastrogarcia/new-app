{"version":3,"sources":["logo.svg","Buttons.js","Display.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Buttons","react_default","a","createElement","className","id","value","onClick","this","props","initialize","handleErase","class","handleOperators","handleInput","result","handleDecimal","React","Component","Display","currVal","formula","isOperator","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","numberAfterLastOperator","state","match","setState","evaluated","includes","test","target","slice","length","bind","assertThisInitialized","handleResult","math","toString","src_Display","src_Buttons","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eecb58d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nclass Buttons extends React.Component {\r\n  render () {\r\n    return (\r\n    <div className=\"buttons-container\">\r\n        <button id=\"clear\" value='AC' onClick={this.props.initialize}>C</button>\r\n        <button id=\"erase\" value=\"erase\" onClick={this.props.handleErase}><i class=\"fas fa-backspace\"></i></button>\r\n        <button id=\"multiply\" value='*' onClick={this.props.handleOperators}>x</button>\r\n        <button id=\"divide\" value='/' onClick={this.props.handleOperators}>/</button>\r\n        <button id=\"one\" value='1' onClick={this.props.handleInput}>1</button>\r\n        <button id=\"two\" value='2' onClick={this.props.handleInput}>2</button>\r\n        <button id=\"three\" value='3' onClick={this.props.handleInput}>3</button>\r\n        <button id=\"add\" value='+' onClick={this.props.handleOperators}>+</button>\r\n        <button id=\"four\" value='4' onClick={this.props.handleInput}>4</button>\r\n        <button id=\"five\" value='5' onClick={this.props.handleInput}>5</button>\r\n        <button id=\"six\" value='6' onClick={this.props.handleInput}>6</button>\r\n        <button id=\"subtract\" value='-' onClick={this.props.handleOperators}>-</button>\r\n        <button id=\"seven\" value='7' onClick={this.props.handleInput}>7</button>\r\n        <button id=\"eight\" value='8' onClick={this.props.handleInput}>8</button>\r\n        <button id=\"nine\" value='9' onClick={this.props.handleInput}>9</button>\r\n        <button id=\"equals\" onClick={this.props.result}>=</button>\r\n        <button id=\"zero\" value='0' onClick={this.props.handleInput}>0</button>\r\n        <button id=\"decimal\" value='.' onClick={this.props.handleDecimal}>.</button>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Buttons;\r\n","import React, { Component } from 'react';\r\n\r\nclass Display extends React.Component {\r\n  render () {\r\n    return (\r\n      <div id=\"display-container\">\r\n        <div className=\"display\">{this.props.currVal}</div>\r\n        <div className=\"display\" id=\"display\">{this.props.formula}</div>\r\n      </div>\r\n        )\r\n  }\r\n}\r\n export default Display;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Buttons from './Buttons';\r\nimport Display from './Display';\r\nimport * as math from 'mathjs';\r\n\r\n\r\nconst isOperator = /[\\+\\-\\/\\*]/;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currVal: '',\r\n      formula: '0',\r\n      evaluated: false\r\n    }\r\n this.handleInput = this.handleInput.bind(this);\r\n this.handleOperators = this.handleOperators.bind(this);\r\n this.handleResult = this.handleResult.bind(this);\r\n this.handleDecimal = this.handleDecimal.bind(this);\r\n this.initialize = this.initialize.bind(this);\r\n this.handleErase = this.handleErase.bind(this);\r\n\r\n  }\r\n\r\n  handleInput(e) {\r\n    this.setState({\r\n      currVal: this.state.currVal == '0' || isOperator.test(this.state.currVal) ? e.target.value :\r\n               this.state.currVal + e.target.value,\r\n      formula: this.state.currVal == '0' && e.target.value == '0' ? this.state.formula :\r\n               this.state.formula == '0' ? e.target.value :\r\n               this.state.evaluated==true ? e.target.value :\r\n               this.state.formula + e.target.value,\r\n    evaluated: false\r\n    })\r\n  }\r\n\r\n  handleOperators(e) {\r\n    this.setState({\r\n      currVal: e.target.value,\r\n      formula: this.state.formula[this.state.formula.length-1] == '.' ? this.state.formula.slice(0,-1) + e.target.value :\r\n               !isOperator.test(this.state.currVal) ? this.state.formula + e.target.value :\r\n               this.state.formula.slice(0,-1) + e.target.value,\r\n    evaluated: false\r\n    })\r\n    }\r\n\r\n  handleResult() {\r\n    let result = math.eval(this.state.formula).toString();\r\n    this.setState({\r\n      formula: result.includes('.') && result.length > 10 ? result.slice(0,11) :\r\n               isOperator.test(this.state.currVal) ? this.state.formula :\r\n               result,\r\n      currVal: '',\r\n      evaluated: true\r\n    })\r\n  }\r\n\r\n  handleDecimal = (e) => {\r\n    const numberAfterLastOperator = this.state.formula.match(/(-?\\d+\\.?\\d*)$/);\r\n    this.setState({\r\n      currVal: this.state.evaluated == true && !this.state.formula.includes('.') ? this.state.formula + e.target.value :\r\n               this.state.currVal.includes('.') ? this.state.currVal :\r\n               numberAfterLastOperator == null ? '0.' :\r\n               numberAfterLastOperator[0].includes('.') ? this.state.currVal :\r\n               this.state.currVal=='' || isOperator.test(this.state.currVal) ? '0.' :\r\n               this.state.currVal + e.target.value,\r\n      formula: numberAfterLastOperator == null ? this.state.formula + '0.' :\r\n               numberAfterLastOperator[0].includes('.') ? this.state.formula :\r\n               this.state.formula + e.target.value,\r\n    evaluated: false\r\n    })\r\n  }\r\n initialize() {\r\n    this.setState({\r\n        currVal: '',\r\n        formula: '0',\r\n        evaluated: false\r\n    })\r\n  }\r\n\r\n  handleErase = () => {\r\n    this.setState({\r\n      currVal: isOperator.test(this.state.currVal) ? this.state.formula.slice(0,-1) :\r\n               this.state.currVal=='0' ? this.state.currVal :\r\n               this.state.currVal.length==1 ? '0'  :\r\n               this.state.currVal.slice(0,-1),\r\n      formula: this.state.formula=='0' ? this.state.formula :\r\n               this.state.formula.length==1 ? '0' :\r\n               this.state.formula.slice(0,-1),\r\n    evaluated: false\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n    <div id=\"container\">\r\n        <Display currVal={this.state.currVal} formula={this.state.formula}/>\r\n        <Buttons handleInput={this.handleInput} initialize={this.initialize} handleOperators={this.handleOperators} result={this.handleResult} handleDecimal={this.handleDecimal} handleErase={this.handleErase}/>\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}